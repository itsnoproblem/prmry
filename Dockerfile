FROM golang:1.20.6-alpine as builder

RUN apk update && apk add --no-cache git

WORKDIR /app
COPY go.mod go.sum ./

RUN go mod download
RUN go install github.com/a-h/templ/cmd/templ@latest

COPY . .
RUN templ generate ./
RUN GOOS=linux go build -o http-server ./cmd/http-server

FROM alpine:latest
RUN apk --no-cache add ca-certificates

ARG PORT
ARG APP_URL
ARG DB_HOST
ARG DB_NAME
ARG DB_PASS
ARG DB_USER
ARG GITHUB_CLIENT_ID
ARG GITHUB_CLIENT_SECRET
ARG GOOGLE_CLIENT_ID
ARG GOOGLE_CLIENT_SECRET
ARG JAWSDB_URL
ARG OPEN_AI_KEY
ARG PAPERTRAIL_API_TOKEN
ARG SESSION_SECRET

ENV APP_URL=$APP_URL
ENV DB_HOST=$DB_HOST
ENV DB_NAME=$DB_NAME
ENV DB_PASS=$DB_PASS
ENV DB_USER=$DB_USER
ENV GITHUB_CLIENT_ID=$GITHUB_CLIENT_ID
ENV GITHUB_CLIENT_SECRET=$GITHUB_CLIENT_SECRET
ENV GOOGLE_CLIENT_ID=$GOOGLE_CLIENT_ID
ENV GOOGLE_CLIENT_SECRET=$GOOGLE_CLIENT_SECRET
ENV JAWSDB_URL=$JAWSDB_URL
ENV LISTEN_PORT=$PORT
ENV OPEN_AI_KEY=$OPEN_AI_KEY
ENV PAPERTRAIL_API_TOKEN=$PAPERTRAIL_API_TOKEN
ENV SESSION_SECRET=$SESSION_SECRET

WORKDIR /root/

COPY --from=builder /app/http-server .
COPY --from=builder /app/www ./www

CMD [ "./http-server" ]
