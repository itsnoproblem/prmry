package flow

import (
    "fmt"

    "github.com/itsnoproblem/prmry/internal/flow"
)

templ PromptEditor(view Detail) {
    <div class="mb-3" hx-ext="morph">
        <label for="promptEditor" class="form-label">
            Prompt generated by this flow
        </label>
        <div id="highlight-container" class="border rounded mb-1">
            <div id="highlight"></div>
            <div id="promptEditor"
                 contenteditable="true"
                 class="form-control"
                 hx-swap="morph:innerHTML"
                 hx-put="/flow-builder/prompt"
                 hx-trigger="input delay:1100ms from:#promptEditor">{ view.Prompt }</div>
        </div>
        <span class="smaller">
            indicate prompt arguments with <code>%s</code>
        </span>
        <input type="hidden" name="prompt" id="promptInput" value="{ view.Prompt }"/><br/>
    </div>

    <div class="mb-3">
        if len(view.PromptArgs) > 0 {
            <div class="mb-2">
                <label>Prompt Arguments:</label>
            </div>
        }

        for j, arg := range view.PromptArgs {
            <div class="row mb-3">
                <div class="form-floating col">
                    @FieldSelector(fmt.Sprintf("promptArgs-%d", j), "promptArgs", view.SupportedFields, arg.Source.String(), fmt.Sprintf("Argument %d", j))
                </div>
                if arg.Source == flow.FieldSourceFlow {
                    <div class="form-floating col">
                        @FieldSelector(fmt.Sprintf("promptArgFlows-%d", j), "promptArgFlows", view.AvailableFlowsByID, arg.Value, "Flow")
                    </div>
                }
                if arg.Source == flow.FieldSourceInputArg {
                    <div class="form-floating col">
                        @FieldSelector(fmt.Sprintf("promptInputParams-%d", j), "promptArgInputs", view.InputParams.Map(), arg.Value, "Param name")
                    </div>
                }
            </div>
        }
    </div>
    <script>
        updateHighlight();
    </script>
}