package flow

templ Preview(view Detail) {
    <div class="container-sm">
        <div class="row">
            <div class="col">
                <h2>{ view.Name }</h2>
                <hr class="b-0"/>
                <h5 class="pb-2">Triggered when:</h5>
                <div class="container">
                    if len(view.Rules) > 0 {
                        <ul>
                        for i, rule := range view.Rules {
                            <li>
                                <span class="text-primary-emphasis pe-2">{ rule.Field.Source }</span>
                                if rule.Field.Value != "" {
                                    <span class="text-info-emphasis pe-2">({ rule.Field.Value })</span>
                                }
                                <span class="text-warning-emphasis pe-2">{ rule.Condition }</span>
                                <span class="text-success-emphasis">{ rule.Value }</span>
                            </li>
                            if i < len(view.Rules)-1 {
                                if view.RequireAll {
                                    <li class="text-body-secondary">AND</li>
                                } else {
                                    <li class="text-body-secondary">OR</li>
                                }
                            }
                        }
                        </ul>
                    } else {
                        <span class="text-body-secondary">
                            any input
                        </span>
                    }
                </div>
            </div>
        </div>
            <div class="row">
                <div class="col">
                    <h5 class="pt-4 pb-2">API URLs:</h5>
                    <div class="container">
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">
                                <code>{ view.FlowURL }</code>
                            </li>
                            if len(view.Funnels) > 0 {
                                for _, funnel := range view.Funnels {
                                    <li class="list-group-item">
                                        <code>{ funnel.URL }</code>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                </div>
            </div>
        <div class="row">
            <div class="col">
                <h5 class="pt-4 pb-2">Request format:</h5>
                <div class="container p-3 b-1 rounded border">
                    <pre class="copy language-json bg-dark-subtle p-4">
                        <code>
                            { view.APIPayload() }
                        </code>
                    </pre>
                </div>
            </div>
        </div>
    </div>
    <script hx-script="true">
    (function() {
        const copyButtonLabel = "Copy";
        const copyButtonClickedLabel = "Copied!";
        let blocks = document.querySelectorAll("pre.copy");

        blocks.forEach((block) => {
            // only add button if browser supports Clipboard API
            if (navigator.clipboard) {
                let button = document.createElement("button");

                button.innerText = copyButtonLabel;
                block.appendChild(button);
                button.classList.add("p-2");

                button.addEventListener("click", async (e) => {
                    e.preventDefault();
                    await copyCode(block);
                    button.innerText = copyButtonClickedLabel;
                    setTimeout(() => {
                        button.innerText = copyButtonLabel;
                    }, 1000);
                });
            }
        });

        async function copyCode(block) {
            let code = block.querySelector("code");
            let text = code.innerText;

            await navigator.clipboard.writeText(text);
        }
    })();
    </script>
}
