// Code generated by templ@v0.2.334 DO NOT EDIT.

package flow

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"fmt"

	"github.com/itsnoproblem/prmry/internal/flow"
)

func PromptEditor(view Detail) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"mb-3\" hx-ext=\"morph\"><label for=\"promptEditor\" class=\"form-label\">")
		if err != nil {
			return err
		}
		var_2 := `Prompt generated by this flow`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</label><div id=\"highlight-container\" class=\"border rounded mb-1\"><div id=\"highlight\"></div><div id=\"promptEditor\" contenteditable=\"true\" class=\"form-control\" hx-put=\"/flow-builder/prompt\" hx-target=\"#prompt-args\" hx-trigger=\"input delay:1600ms from:#promptEditor\">")
		if err != nil {
			return err
		}
		var var_3 string = view.Prompt
		_, err = templBuffer.WriteString(templ.EscapeString(var_3))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div></div><span class=\"smaller\">")
		if err != nil {
			return err
		}
		var_4 := `indicate prompt arguments with `
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("<code>")
		if err != nil {
			return err
		}
		var_5 := `%s`
		_, err = templBuffer.WriteString(var_5)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</code></span><input type=\"hidden\" name=\"prompt\" id=\"promptInput\" value=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(view.Prompt))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"><br></div>")
		if err != nil {
			return err
		}
		err = PromptArgs(view).Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func PromptArgs(view Detail) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_6 := templ.GetChildren(ctx)
		if var_6 == nil {
			var_6 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"mb-3\" id=\"prompt-args\">")
		if err != nil {
			return err
		}
		if len(view.PromptArgs) > 0 {
			_, err = templBuffer.WriteString("<div class=\"mb-2\"><label>")
			if err != nil {
				return err
			}
			var_7 := `Prompt Arguments:`
			_, err = templBuffer.WriteString(var_7)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</label></div>")
			if err != nil {
				return err
			}
		}
		for j, arg := range view.PromptArgs {
			_, err = templBuffer.WriteString("<div class=\"row mb-3\"><div class=\"form-floating col\">")
			if err != nil {
				return err
			}
			err = FieldSelector(fmt.Sprintf("promptArgs-%d", j), "promptArgs", view.SupportedFields, arg.Source.String(), fmt.Sprintf("Argument %d", j)).Render(ctx, templBuffer)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</div>")
			if err != nil {
				return err
			}
			if arg.Source == flow.FieldSourceFlow {
				_, err = templBuffer.WriteString("<div class=\"form-floating col\">")
				if err != nil {
					return err
				}
				err = FieldSelector(fmt.Sprintf("promptArgFlows-%d", j), "promptArgFlows", view.AvailableFlowsByID, arg.Value, "Flow").Render(ctx, templBuffer)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
			}
			if arg.Source == flow.FieldSourceInputArg {
				_, err = templBuffer.WriteString("<div class=\"form-floating col\">")
				if err != nil {
					return err
				}
				err = FieldSelector(fmt.Sprintf("promptInputParams-%d", j), "promptArgInputs", view.InputParams.Map(), arg.Value, "Param name").Render(ctx, templBuffer)
				if err != nil {
					return err
				}
				_, err = templBuffer.WriteString("</div>")
				if err != nil {
					return err
				}
			}
			_, err = templBuffer.WriteString("</div>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
