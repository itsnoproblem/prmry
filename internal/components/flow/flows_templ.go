// Code generated by templ@v0.2.334 DO NOT EDIT.

package flow

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/itsnoproblem/prmry/internal/components"
)

func FlowsListPage(view FlowsListView) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var_2 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			err = FlowsList(view).Render(ctx, templBuffer)
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = components.Page(&view).Render(templ.WithChildren(ctx, var_2), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func FlowsList(view FlowsListView) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_3 := templ.GetChildren(ctx)
		if var_3 == nil {
			var_3 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"container container-fluid flows-list-wrapper\"><div class=\"row pb-3 pt-3\"><div class=\"col\"><h2>")
		if err != nil {
			return err
		}
		var_4 := `Flows`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h2></div><div class=\"col text-end\"><button class=\"btn btn-info\" hx-push-url=\"true\" hx-target=\"#content-root\" hx-get=\"/flow-builder\">")
		if err != nil {
			return err
		}
		var_5 := `Create`
		_, err = templBuffer.WriteString(var_5)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</button></div></div><hr class=\"text-info mb-5 mt-0\"><table class=\"table table-striped table-hover\" width=\"100%\"><tr><th scope=\"col\">")
		if err != nil {
			return err
		}
		var_6 := `Name`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th scope=\"col\" class=\"d-none d-lg-table-cell\">")
		if err != nil {
			return err
		}
		var_7 := `# rules`
		_, err = templBuffer.WriteString(var_7)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th scope=\"col\">")
		if err != nil {
			return err
		}
		var_8 := `Last Changed`
		_, err = templBuffer.WriteString(var_8)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th scope=\"col\"></th></tr>")
		if err != nil {
			return err
		}
		for _, f := range view.Flows {
			_, err = templBuffer.WriteString("<tr id=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString("flow-" + f.ID))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" class=\"fade-out\"><th scope=\"row\" class=\"py-3 clickable\" hx-get=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString("/flows/" + f.ID + "/edit"))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" hx-push-url=\"true\" hx-target=\"#content-root\" hx-trigger=\"click\">")
			if err != nil {
				return err
			}
			var var_9 string = f.Name
			_, err = templBuffer.WriteString(templ.EscapeString(var_9))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</th><td class=\"py-3 d-none d-lg-table-cell\">")
			if err != nil {
				return err
			}
			var var_10 string = f.RuleCount
			_, err = templBuffer.WriteString(templ.EscapeString(var_10))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</td><td class=\"py-3 last-changed\">")
			if err != nil {
				return err
			}
			var var_11 string = f.LastChanged
			_, err = templBuffer.WriteString(templ.EscapeString(var_11))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</td><td class=\"py-3\" align=\"right\" hx-disinherit=\"hx-get hx-push-url hx-trigger\"><a hx-delete=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString("/flows/" + f.ID))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" hx-target=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString("#flow-" + f.ID))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" hx-swap=\"outerHTML swap:1s\" hx-confirm=\"")
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString(templ.EscapeString("Delete flow '" + f.Name + "'?"))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("\" class=\"button button-secondary\"><i class=\"fa fa-trash\"></i></a></td></tr>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</table></div>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
