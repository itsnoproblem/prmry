// Code generated by templ@v0.2.334 DO NOT EDIT.

package components

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

func TopNavigation(cmp Component) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<nav class=\"navbar navbar-expand-lg bg-body-primary mb-3 mt-1\"><div class=\"container-fluid\">")
		if err != nil {
			return err
		}
		if cmp.User() != nil {
			err = ProfileNavButton(cmp).Render(ctx, templBuffer)
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("<button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#top-nav\" aria-controls=\"top-nav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"><span class=\"navbar-toggler-icon\"></span></button><div id=\"top-nav\" class=\"collapse navbar-collapse justify-content-left\" hx-swap-oob=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(TrueFalse(cmp.IsOOB())))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\">")
		if err != nil {
			return err
		}
		if cmp.User() != nil {
			err = UserNavigation(cmp).Render(ctx, templBuffer)
			if err != nil {
				return err
			}
		} else {
			err = GuestNavigation().Render(ctx, templBuffer)
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</div></div></nav>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func GuestNavigation() templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_2 := templ.GetChildren(ctx)
		if var_2 == nil {
			var_2 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<ul hx-target=\"#content-root\" hx-push-url=\"true\" class=\"navbar-nav guest-nav mb-2 mt-2 mb-lg-0\"><li class=\"nav-item m-auto\"><a class=\"nav-link\" title=\"Home\" data-bs-toggle=\"collapse\" data-bs-target=\".navbar-collapse.show\" hx-get=\"/\"><img src=\"/static/prmry.png\" class=\"navbar-img\"></a></li><li class=\"nav-item m-auto\"><a class=\"nav-link\" title=\"Terms of Service\" data-bs-toggle=\"collapse\" data-bs-target=\".navbar-collapse.show\" hx-get=\"/legal/terms\">")
		if err != nil {
			return err
		}
		var_3 := `TOS`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></li><li class=\"divider d-none d-md-block pt-1  m-auto\">")
		if err != nil {
			return err
		}
		var_4 := `&nbsp;|&nbsp`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</li><li class=\"nav-item  m-auto\"><a class=\"nav-link\" title=\"Privacy Policy\" data-bs-toggle=\"collapse\" data-bs-target=\".navbar-collapse.show\" hx-get=\"/legal/privacy\">")
		if err != nil {
			return err
		}
		var_5 := `Privacy`
		_, err = templBuffer.WriteString(var_5)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></li><li class=\"divider d-none d-md-block pt-1 m-auto\">")
		if err != nil {
			return err
		}
		var_6 := `&nbsp;|&nbsp`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</li><li class=\"nav-item m-auto\"><a class=\"nav-link\" title=\"Source Code\" target=\"_blank\" href=\"https://github.com/itsnoproblem/prmry\">")
		if err != nil {
			return err
		}
		var_7 := `Source Code`
		_, err = templBuffer.WriteString(var_7)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></li></ul>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func ProfileNavButton(cmp Component) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_8 := templ.GetChildren(ctx)
		if var_8 == nil {
			var_8 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<li class=\"nav-item dropdown\"><a class=\"nav-link dropdown-toggle\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\"><img class=\"img-fluid navbar-avatar\" alt=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(cmp.User().Name))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" src=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(cmp.User().AvatarURL))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\"></a><ul class=\"dropdown-menu\" hx-target=\"#content-root\" hx-push-url=\"true\"><li><a class=\"dropdown-item\" hx-get=\"/account\" data-bs-toggle=\"collapse\" data-bs-target=\".navbar-collapse.show\">")
		if err != nil {
			return err
		}
		var_9 := `Profile`
		_, err = templBuffer.WriteString(var_9)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></li><li><hr class=\"dropdown-divider\"></li><li><a class=\"dropdown-item\" href=\"")
		if err != nil {
			return err
		}
		var var_10 templ.SafeURL = templ.SafeURL("/auth/logout/" + cmp.User().Provider)
		_, err = templBuffer.WriteString(templ.EscapeString(string(var_10)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\">")
		if err != nil {
			return err
		}
		var_11 := `Log out`
		_, err = templBuffer.WriteString(var_11)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></li><li><hr class=\"dropdown-divider\"></li><li><a class=\"dropdown-item\" title=\"Terms of Service\" data-bs-toggle=\"collapse\" data-bs-target=\".navbar-collapse.show\" hx-get=\"/legal/terms\">")
		if err != nil {
			return err
		}
		var_12 := `TOS`
		_, err = templBuffer.WriteString(var_12)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></li><li><a class=\"dropdown-item\" title=\"Privacy Policy\" data-bs-toggle=\"collapse\" data-bs-target=\".navbar-collapse.show\" hx-get=\"/legal/privacy\">")
		if err != nil {
			return err
		}
		var_13 := `Privacy`
		_, err = templBuffer.WriteString(var_13)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</a></li></ul></li>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}

func UserNavigation(cmp Component) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_14 := templ.GetChildren(ctx)
		if var_14 == nil {
			var_14 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<ul class=\"navbar-nav me-auto mb-2 mt-2 mb-lg-0 text-end\"><li class=\"nav-item\"><a class=\"nav-link\" title=\"Flows\" hx-get=\"/flows\" hx-target=\"#content-root\" hx-push-url=\"true\" data-bs-toggle=\"collapse\" data-bs-target=\".navbar-collapse.show\"><span class=\"d-lg-none\">")
		if err != nil {
			return err
		}
		var_15 := `Flows`
		_, err = templBuffer.WriteString(var_15)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span>")
		if err != nil {
			return err
		}
		var_16 := `&nbsp;`
		_, err = templBuffer.WriteString(var_16)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" <i class=\"fa fa-circle-nodes fa-2x\"></i></a></li><li class=\"nav-item\"><a class=\"nav-link\" title=\"Interact\" hx-get=\"/interactions/chat\" hx-target=\"#content-root\" hx-push-url=\"true\" data-bs-toggle=\"collapse\" data-bs-target=\".navbar-collapse.show\"><span class=\"d-lg-none\">")
		if err != nil {
			return err
		}
		var_17 := `Interact`
		_, err = templBuffer.WriteString(var_17)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span>")
		if err != nil {
			return err
		}
		var_18 := `&nbsp;`
		_, err = templBuffer.WriteString(var_18)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" <i class=\"fa fa-message fa-2x\" aria-hidden=\"true\"></i></a></li><li nav-class=\"nav-item\"><a class=\"nav-link\" title=\"Interactions\" hx-get=\"/interactions\" hx-target=\"#content-root\" hx-push-url=\"true\" data-bs-toggle=\"collapse\" data-bs-target=\".navbar-collapse.show\"><span class=\"d-lg-none\">")
		if err != nil {
			return err
		}
		var_19 := `Interactions`
		_, err = templBuffer.WriteString(var_19)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</span>")
		if err != nil {
			return err
		}
		var_20 := `&nbsp;`
		_, err = templBuffer.WriteString(var_20)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" <i class=\"fa fa-list fa-2x\"></i></a></li></ul>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
