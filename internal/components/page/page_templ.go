// Code generated by templ@v0.2.282 DO NOT EDIT.

package page

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

// GoExpression
import "github.com/itsnoproblem/prmry/internal/components"

func Page(cmp components.Component) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		// Element (standard)
		_, err = templBuffer.WriteString("<html")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" lang=\"en\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" data-bs-theme=\"dark\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<head>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<title>")
		if err != nil {
			return err
		}
		// Text
		var_2 := `PRMRY - AI Hub`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</title>")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<meta")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" name=\"viewport\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" content=\"width=device-width, initial-scale=1\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<link")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" rel=\"icon\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" type=\"image/x-png\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" href=\"/static/favicon.png\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<link")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/css/bootstrap.min.css\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" rel=\"stylesheet\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" integrity=\"sha384-KK94CHFLLe+nY2dmCWGMq91rCGa5gtU4mk92HdvYe+M/SXH301p5ILy+dN9+nJOZ\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" crossorigin=\"anonymous\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<link")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" rel=\"preconnect\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" href=\"https://fonts.googleapis.com\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<link")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" rel=\"preconnect\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" href=\"https://fonts.gstatic.com\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" crossorigin")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<link")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" href=\"https://fonts.googleapis.com/css2?family=Anonymous+Pro&amp;family=Cormorant+Garamond:wght@300;400&amp;family=Public+Sans:wght@200;300;500&amp;display=swap\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" rel=\"stylesheet\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (void)
		_, err = templBuffer.WriteString("<link")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" rel=\"stylesheet\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" href=\"/static/main.css\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
// RawElement
		_, err = templBuffer.WriteString("<script")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" src=\"https://unpkg.com/htmx.org@1.8.5\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" integrity=\"sha384-7aHh9lqPYGYZ7sTHvzP1t3BAfLhYSTy9ArHdP3Xsr9/3TlGurYgcPBoFmXX2TX/w\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" crossorigin=\"anonymous\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
// Text
var_3 := ``
_, err = templBuffer.WriteString(var_3)
if err != nil {
	return err
}
		_, err = templBuffer.WriteString("</script>")
		if err != nil {
			return err
		}
// RawElement
		_, err = templBuffer.WriteString("<script")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" src=\"https://unpkg.com/htmx.org/dist/ext/disable-element.js\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
// Text
var_4 := ``
_, err = templBuffer.WriteString(var_4)
if err != nil {
	return err
}
		_, err = templBuffer.WriteString("</script>")
		if err != nil {
			return err
		}
// RawElement
		_, err = templBuffer.WriteString("<script")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" src=\"https://unpkg.com/htmx.org/dist/ext/json-enc.js\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
// Text
var_5 := ``
_, err = templBuffer.WriteString(var_5)
if err != nil {
	return err
}
		_, err = templBuffer.WriteString("</script>")
		if err != nil {
			return err
		}
// RawElement
		_, err = templBuffer.WriteString("<script")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" src=\"https://unpkg.com/htmx.org/dist/ext/debug.js\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
// Text
var_6 := ``
_, err = templBuffer.WriteString(var_6)
if err != nil {
	return err
}
		_, err = templBuffer.WriteString("</script>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</head>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<body>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" id=\"layout\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" class=\"container\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// TemplElement
		err = TopNavigation(cmp).Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" id=\"notices\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<div")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" id=\"content-root\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
		// Element (standard)
		_, err = templBuffer.WriteString("<div>")
		if err != nil {
			return err
		}
		// Children
		err = var_1.Render(ctx, templBuffer)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</div>")
		if err != nil {
			return err
		}
// RawElement
		_, err = templBuffer.WriteString("<script")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" src=\"https://kit.fontawesome.com/5a8d7a3cdf.js\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" crossorigin=\"anonymous\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
// Text
var_7 := ``
_, err = templBuffer.WriteString(var_7)
if err != nil {
	return err
}
		_, err = templBuffer.WriteString("</script>")
		if err != nil {
			return err
		}
// RawElement
		_, err = templBuffer.WriteString("<script")
		if err != nil {
			return err
		}
		// Element Attributes
		_, err = templBuffer.WriteString(" src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha3/dist/js/bootstrap.bundle.min.js\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" integrity=\"sha384-ENjdO4Dr2bkBIFxQpeoTz1HIcje39Wm4jDKdf19U8gI4ddQ3GYNS7NTKfAdVQSZe\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(" crossorigin=\"anonymous\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(">")
		if err != nil {
			return err
		}
// Text
var_8 := ``
_, err = templBuffer.WriteString(var_8)
if err != nil {
	return err
}
		_, err = templBuffer.WriteString("</script>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</body>")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</html>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = io.Copy(w, templBuffer)
		}
		return err
	})
}

