// Code generated by mockery v2.16.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// Responder is an autogenerated mock type for the Responder type
type Responder struct {
	mock.Mock
}

// RespondToMessage provides a mock function with given fields: ctx, msg
func (_m *Responder) GenerateResponse(ctx context.Context, msg, flowID string) (string, error) {
	ret := _m.Called(ctx, msg)

	var r0 string
	if rf, ok := ret.Get(0).(func(context.Context, string) string); ok {
		r0 = rf(ctx, msg)
	} else {
		r0 = ret.Get(0).(string)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, msg)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewResponder interface {
	mock.TestingT
	Cleanup(func())
}

// NewResponder creates a new instance of Responder. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewResponder(t mockConstructorTestingTNewResponder) *Responder {
	mock := &Responder{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
