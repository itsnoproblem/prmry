package interactions

import (
    "fmt"

    "github.com/itsnoproblem/prmry/pkg/components"
    "github.com/itsnoproblem/prmry/pkg/components/page"
    "github.com/itsnoproblem/prmry/pkg/components/chat"
)

templ InteractionDetailPage(view chat.ChatDetailView) {
    @page.Page(&view) {
        @InteractionDetail(view)
    }
}

templ InteractionsListPage(view chat.InteractionListView) {
    @page.Page(&view){
        @InteractionsList(view)
    }
}

templ InteractionDetail(view chat.ChatDetailView) {
    <div class="post-container detail interaction">
        <div class="interaction-meta">
            <div class="btn-group" role="group">

                <a 
                    aria-label="go back"
                    hx-get="/interactions"
                    hx-target="#content-root"
                    hx-push-url="true"
                >
                    <span class="fa fa-circle-left" aria-hidden="true"></span>
                </a>

                <div style="float: left">
                    <div class="interaction-date">
                        { view.Date }
                        <div class="interaction-summary">
                            <span class="pure-button pure-button-primary">
                                Flow: { view.FlowName } |
                            </span>
                            <span class="pure-button pure-button-primary">
                                Model: { view.Model } |
                            </span>
                            <span class="pure-button pure-button-primary">
                                { view.Usage.TotalTokens } tokens
                            </span>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="content-wrapper">
            <div class="prompt-display text-lg-left">
                @components.NewlineToBR(view.PromptHTML)
            </div>

            <div class="post-description">
                <div class="response-display">
                    @components.NewlineToBR(view.ResponseHTML)
                </div>
            </div>

            <ul class="usage">
                <li class="usage-prompt">
                    <b>prompt</b>
                    <hr/>
                    { view.Usage.PromptTokens } tokens
                </li>
                <li class="operator">+</li>
                <li class="usage-completion">
                    <b>completion</b>
                    <hr/>
                    { view.Usage.CompletionTokens } tokens
                </li>
                <li class="operator">=</li>
                <li class="usage-total">
                    <b>total</b>
                    <hr/>
                    { view.Usage.TotalTokens } tokens
                </li>
            </ul>
        </div>
    </div>
}

templ InteractionsList(view chat.InteractionListView) {
    <div class="posts">
        <h1 class="content-subhead">Recent Interactions</h1>
        
        for _, item := range view.Interactions {
            <section class="post">
                <header class="post-header">
                    <img width="48" height="48" 
                        alt={view.User().Name} 
                        class="post-avatar pure-img" 
                        src={ view.User().AvatarURL }/>

                    <h2 class="post-title list-post-title">
                        <a hx-get={"/interactions/"+item.ID}
                           hx-target="#content-root"
                           hx-push-url="true"
                        >{ item.Prompt }</a>
                    </h2>

                    <p class="post-meta">
                        <span class="text-info"><b>{ item.Date }</b></span> &nbsp; &mdash; &nbsp;
                        if item.FlowID == "" {
                            <span class="text-info">created with <b>raw input</b></span>
                        } else {
                            <span class="text-info">created via <b>{ item.FlowName }</b></span>
                        }
                        &nbsp;<span>using <b>{ item.Model }</b></span>
                        &nbsp;<span class="badge badge-info">{ fmt.Sprintf("%d", item.TokensUsed) } tokens</span>
                    </p>
                </header>
            </section>
        }
    </div>
}
