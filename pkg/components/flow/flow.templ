package flow

import (
    "fmt" 

    "github.com/itsnoproblem/prmry/pkg/components/page"
)

templ FlowBuilderPage(view Detail) {
    @page.Page(&view) {
        @FlowBuilder(view)
    }
}

templ FlowBuilder(view Detail) {
    <form 
        id="flow-builder" 
        hx-post="/flows/new" 
        hx-target="#content-root" 
        hx-push-url="false"
        hx-ext="json-enc"
    >
        <input type="hidden" name="id" value={ view.ID }/>
    
        <div class="row">
            <div class="col col-7 mt-3">
                @RuleBuilder(view)
            </div>
            <div class="col col-5">
                @FlowOptions(view)
            </div>
        </div>

        <hr class="text-info mb-4 mt-4"/>

        <div class="row">
            <div class="col col-1">
                <input
                    class="btn btn-primary" 
                    type="submit" 
                    value="Save"
                />
            </div>
            <div class="col col-1">
                <button 
                    class="btn btn-secondary" 
                    hx-get="/flows" 
                    hx-target="#content-root"
                    hx-push-url="true"
                    hx-confirm="Abandon changes?"
                >
                    Cancel
                </button>
            </div>
            <div class="col col-10"></div>
        </div>
    </form>
}

templ RuleBuilder(view Detail) {
    <div class="d-flex justify-content-between">
        <h4 class="text-info">
            Rules
        </h4>
        <button 
            id="add-rule"
            hx-post="/flows/new/rules"
            hx-target="#content-root"
            hx-push-url="false"
            class="btn btn-info btn-sm mb-3">
            New
        </button>
    </div>
    <hr class="text-info mb-5 mt-0"/>

    <div id="rules-container" class="container pb-4">

        if len(view.Rules) == 0 { 

            <h2 class="text-body-secondary text-body-secondary">
                No rules yet
            </h2>
            
        }
 
        for i, rule := range view.Rules {
            if i > 0 {
                <hr class="text-secondary pb-3"/>
            }
            <div class="row flow-rule fade-in">
                <div class="col">
                    <div class="form-floating mb-3">
                        <select name={ "fieldName" } class="form-select form-select-md" aria-label="Field name">
                            <option></option>
                            for _, name := range view.SupportedFields {
                                if name == rule.Field {
                                    <option value={ name } selected="true">{ name }</option>
                                } else {
                                    <option value={ name }>{ name }</option>
                                }
                            }
                        </select>
                        <label for={ "fieldName" }>Field Name</label>
                    </div>
                </div>
                <div class="col">
                    <div class="form-floating mb-3">
                        <select name="condition" class="form-select form-select-md" aria-label="Condition">
                            <option></option>

                            for _, c := range view.SupportedConditions {
                                if c == rule.Condition {
                                    <option value={ c } selected="true">
                                        { c }
                                    </option>
                                } else {
                                    <option value={ c }>
                                        { c }
                                    </option>
                                }
                                
                            }
                        </select>
                        <label for={ "condition" }>Condition</label>
                    </div>
                </div>
                <div class="col">
                    <div class="form-floating mb-3">
                        <input type="text"
                            name={ "value" } 
                            class="form-control form-control-md" 
                            placeholder="Value"
                            value={ rule.Value }
                        />
                        <label for="value">Value</label>
                    </div>
                </div>
                <div class="col-1 pt-3">
                    <a
                        hx-delete={ fmt.Sprintf("/flows/new/rules/%d", i) } 
                        hx-target="#content-root"
                        class="button-secondary"
                    >
                      <i class="fa fa-close"></i>
                    </a>
                </div>
            </div>
        }
    </div>
}

templ FlowOptions(view Detail) {
    <div class="form-floating mb-3">
        <input name="name" 
            type="text" 
            class="form-control" 
            placeholder="Welcome Flow"
            value={ view.Name }
        />
        <label for="name">Flow Name</label>
    </div>

    <div class="text-body-secondary pb-1">Trigger this flow when</div>   
    <div class="container pb-3">
        <div class="form-check">
            if view.RequireAll {
                <input class="form-check-input" type="radio" name="requireAll" id="require-all-true" value="true" checked/>
            } else {
                <input class="form-check-input" type="radio" name="requireAll" id="require-all-true" value="true"/>
            }
            <label class="form-check-label" for="require-all-true">
                <em>ALL</em> rules match
            </label>
        </div>
        <div class="form-check">
            if view.RequireAll {
                <input class="form-check-input" type="radio" name="requireAll" id="require-all-false" value="false"/>
            } else {
                <input class="form-check-input" type="radio" name="requireAll" id="require-all-false" value="false" checked/>
            }
            <label class="form-check-label" for="require-all-false">
                <em>ANY</em> rule matches
            </label>
        </div>
    </div>

    <div class="mb-3">
        <label for="prompt" class="form-label text-body-secondary">Prompt generated by this flow<br/>
        (indicate replacements with <code>%s</code>)</label>
        <textarea 
            class="form-control" 
            name="prompt" 
            id="prompt" 
            rows="5"
            hx-put="/flows/new/prompt"
            hx-trigger="keyup changed delay:500ms"
        >
            { view.Prompt }
        </textarea>
    </div>

    
    <div class="mb-3">
        if len(view.PromptArgs) > 0 { 
            <div class="mb-2 text-body-secondary">Replacements:</div>
        }
        for j, arg := range view.PromptArgs {
            <div class="form-floating mb-3">
                <input type="text"
                    id={ "promptArg-" + string(j) }
                    name="promptArgs" 
                    class="form-control form-control-md" 
                    placeholder={ fmt.Sprintf("Replacement %d", j + 1) }
                    value={ arg }
                />
                <label for={ "promptArg-" + string(j) }>{ fmt.Sprintf("Replacement %d", j + 1) }</label>
            </div>
        }
    </div>
}

templ FlowsListPage(view FlowsListView) {
    @page.Page(&view) {
        @FlowsList(view)
    }
}

templ FlowsList(view FlowsListView) {
    <div class="d-flex align-items-end flex-column mb-3">
        <button 
            hx-push-url="true"
            hx-target="#content-root"
            hx-get="/flows/new"
        >
            New Flow
        </button>
    </div>

    <div class="container flows-list-wrapper">
    for _, f := range view.Flows {
        <div class="row">
            <div class="col">ID: { f.ID }</div>
            <div class="col">Name: { f.Name }</div>
            <div class="col">edit</div>
            <div class="col">delete</div>
        </div>
    }
    </div>
}
